<!DOCTYPE html>
<html>

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Layloan</title>
  <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500&display=swap" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<style>
  @import url("https://unpkg.com/@webpixels/css@1.1.5/dist/index.css");
  @import url("https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.4.0/font/bootstrap-icons.min.css");

  :root {
    --primary-color: #007AFF;
    --secondary-color: #5AC8FA;
    --background-color: #F2F2F7;
    --card-background: #FFFFFF;
    --text-color: #1C1C1E;
  }

  body {
    /* font-family: 'Inter', sans-serif; */
    background-color: var(--background-color);
    color: var(--text-color);
    margin: 0;
    padding: 0px;
  }

  /* New Overview Styles */
  .overview-container {
      padding: 1.5rem;
      background-color: #f5f5f7;
    }

    .overview-header {
      margin-bottom: 2rem;
      padding: 1.5rem;
      background: linear-gradient(135deg, #fff 0%, #f8f9fa 100%);
      border-radius: 16px;
      box-shadow: 0 2px 4px rgba(0,0,0,0.02);
    }

    .overview-header h1 {
      font-size: 1.75rem;
      font-weight: 600;
      color: #1d1d1f;
      margin-bottom: 0.5rem;
    }

    .overview-header p {
      color: #6e6e73;
      font-size: 1rem;
    }

    .overview-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
      gap: 1.5rem;
      margin-bottom: 1.5rem;
    }

    .stat-card {
      background: #fff;
      border-radius: 16px;
      padding: 1.5rem;
      box-shadow: 0 2px 4px rgba(0,0,0,0.02);
      border: 1px solid rgba(0,0,0,0.05);
      transition: transform 0.2s ease;
    }

    .stat-card:hover {
      transform: translateY(-2px);
    }

    .stat-title {
      font-size: 0.875rem;
      color: #6e6e73;
      margin-bottom: 0.5rem;
      font-weight: 500;
    }

    .stat-value {
      font-size: 2rem;
      font-weight: 600;
      color: #1d1d1f;
      margin-bottom: 1rem;
    }

    .stat-badge {
      display: inline-flex;
      align-items: center;
      padding: 0.25rem 0.75rem;
      background: #f5f5f7;
      border-radius: 20px;
      font-size: 0.875rem;
      color: #6e6e73;
    }

    .progress-container {
      background: #f5f5f7;
      height: 6px;
      border-radius: 3px;
      margin: 1rem 0;
      overflow: hidden;
    }

    .progress-bar {
      height: 100%;
      background: linear-gradient(90deg, #007AFF 0%, #5856D6 100%);
      border-radius: 3px;
      transition: width 0.3s ease;
    }

    .stats-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));
      gap: 1rem;
    }

    .stat-item {
      background: #f5f5f7;
      padding: 1rem;
      border-radius: 12px;
      text-align: center;
    }

    .stat-item-value {
      font-size: 1.25rem;
      font-weight: 600;
      color: #1d1d1f;
      margin-bottom: 0.25rem;
    }

    .stat-item-label {
      font-size: 0.75rem;
      color: #6e6e73;
    }

    .referral-card {
      background: linear-gradient(135deg, #007AFF 0%, #5856D6 100%);
      color: white;
    }

    .referral-link {
      background: rgba(255,255,255,0.1);
      padding: 0.75rem;
      border-radius: 8px;
      font-size: 0.875rem;
      margin-top: 0.75rem;
      cursor: pointer;
      transition: background 0.2s ease;
    }

    .referral-link:hover {
      background: rgba(255,255,255,0.2);
    }

    /* Mobile Responsive Adjustments */
    @media (max-width: 768px) {
      .overview-container {
        padding: 1rem;
      }

      .overview-header {
        padding: 1rem;
      }

      .overview-header h1 {
        font-size: 1.5rem;
      }

      .overview-grid {
        grid-template-columns: 1fr;
      }

      .stat-card {
        padding: 1.25rem;
      }

      .stat-value {
        font-size: 1.75rem;
      }

      .stats-grid {
        grid-template-columns: repeat(2, 1fr);
      }
    }kground color for visibility */
  

  .lead-types-grid {
    display: flex;
    flex-direction: column;
    /* Stack items vertically */
  }
</style>

<body>
  <div class="d-flex flex-column flex-lg-row h-lg-full bg-surface-secondary">
    <nav class="navbar show navbar-vertical h-lg-screen navbar-expand-lg px-0 py-3 navbar-light bg-white border-bottom border-bottom-lg-0 border-end-lg" id="navbarVertical">
      <div class="container-fluid">

        <button class="navbar-toggler ms-n2" type="button" data-bs-toggle="collapse" data-bs-target="#sidebarCollapse" aria-controls="sidebarCollapse" aria-expanded="false" aria-label="Toggle navigation">
          <span class="navbar-toggler-icon"></span>
        </button>

        <a class="navbar-brand py-lg-2 mb-lg-5 px-lg-6 me-0" href="/">
          <img src="/images/logolayloan.png" alt="" style="width: 150px;">
        </a>


        <div class="collapse navbar-collapse" id="sidebarCollapse">


          <ul class="navbar-nav">
            <li class="nav-item">
              <a class="nav-link" href="/dashboard/">
                <i class="bi bi-house"></i> Dashboard
              </a>
            </li>
            <% if (userType==='admin' || userType==='hr' || userType==='broker') { %>
            <li class="nav-item">
              <a class="nav-link" href="/dashboard/management">
                <i class="bi bi-people"></i> <%= userType === 'broker' ? 'My Referred Users' : 'Management' %>
              </a>
            </li>
            <% } %>
            <% if (userType==='admin' || userType==='agent' || userType==='partner' || userType==='customer' || userType==='broker' ) { %>
            <li class="nav-item">
              <a class="nav-link" href="/dashboard/leads">
                <i class="bi bi-bar-chart"></i>
                <%= userType==='customer' ? 'My Leads' : 'Leads' %>
              </a>
            </li>
            <% } %>
            <% if (userType==='admin' || userType==='hr' ) { %>
            <li class="nav-item">
              <a class="nav-link" href="/dashboard/jobs">
                <i class="bi bi-card-list"></i> Jobs Listing
              </a>
            </li>
            <% } %>
            <% if (userType==='admin' || userType==='hr' ) { %>
            <li class="nav-item">
              <a class="nav-link" href="/dashboard/resume">
                <i class="bi bi-file-person"></i> Resumes
              </a>
            </li>
            <% } %>
            <% if (userType==='admin' || userType==='blog writer' ) { %>
            <li class="nav-item">
              <a class="nav-link" href="/dashboard/blog">
                <i class="bi bi-file-text"></i> Blog
              </a>
            </li>
            <% } %>
            <% if (userType === 'broker' && referralId) { %>
            <li class="nav-item">
              <a class="nav-link" href="#" id="referralLink" data-referral-id="<%= referralId %>">
                <i class="bi bi-link"></i> My Referral ID:<%= referralId %>
              </a>
            </li>
            <% } %>
          </ul>
          <script>
            document.addEventListener('DOMContentLoaded', function() {
              const referralLink = document.getElementById('referralLink');
              if (referralLink) {
                referralLink.addEventListener('click', function(e) {
                  e.preventDefault();
                  const referralId = this.getAttribute('data-referral-id');
                  navigator.clipboard.writeText(referralId).then(function() {
                    alert('Referral ID copied to clipboard!');
                  }, function(err) {
                    console.error('Could not copy text: ', err);
                  });
                });
              }
            });
          </script>
          <hr class="navbar-divider my-5 opacity-20">
          <div class="mt-auto"></div>
          <ul class="navbar-nav">
            <li class="nav-item">
              <a class="nav-link" href="/auth/logout">
                <i class="bi bi-box-arrow-left"></i> Logout
              </a>
            </li>
          </ul>
        </div>
      </div>
    </nav>
   <!-- New Overview Content -->
   <div class="h-screen flex-grow-1 overflow-y-lg-auto">
    <main class="py-6 bg-surface-secondary">
      <div class="overview-container">
        <div class="overview-header">
          <h1>Welcome, <%= userName %></h1>
          <p>Here's your lead generation overview</p>
        </div>

        <div class="overview-grid">
          <!-- Total Leads Card -->
          <div class="stat-card">
            <div class="stat-title">Total Leads</div>
            <div class="stat-value"><%= totalLeads %></div>
            <div class="progress-container">
              <div class="progress-bar" style="width: <%= (todayLeads / totalLeads) * 100 %>%;"></div>
            </div>
            <div class="stat-badge">
              Today's Leads: <%= todayLeads %>
            </div>
          </div>

          <!-- Lead Types Card -->
          <div class="stat-card">
            <div class="stat-title">Lead Types</div>
            <div class="stats-grid">
              <% for (let type in leadTypeCounts) { %>
                <div class="stat-item">
                  <div class="stat-item-value"><%= leadTypeCounts[type].allTime %></div>
                  <div class="stat-item-label"><%= type.charAt(0).toUpperCase() + type.slice(1) %></div>
                  <div class="stat-badge">Today: <%= leadTypeCounts[type].today %></div>
                </div>
              <% } %>
            </div>
          </div>

          <!-- Lead Status Card -->
          <div class="stat-card">
            <div class="stat-title">Lead Status</div>
            <div class="stats-grid">
              <% for (let status in statusCounts) { %>
                <div class="stat-item">
                  <div class="stat-item-value"><%= statusCounts[status].allTime %></div>
                  <div class="stat-item-label">
                    <%= status.charAt(0).toUpperCase() + status.slice(1).replace('_', ' ') %>
                  </div>
                  <div class="stat-badge">Today: <%= statusCounts[status].today %></div>
                </div>
              <% } %>
            </div>
          </div>

          <!-- Referral Links Card -->
          <% if (referralCounts && referralCounts.length > 0) { %>
            <div class="stat-card referral-card">
              <div class="stat-title" style="color: rgba(255,255,255,0.9)">Affiliate Links</div>
              <% for (let referral of referralCounts) { %>
                <div class="referral-link" data-referral="<%= referral.referral_code %>">
                  <div>https://combined.techtasa.com/?referral=<%= referral.referral_code %></div>
                  <div class="stat-badge" style="background: rgba(255,255,255,0.1); margin-top: 0.5rem">
                    <%= referral.count %> leads generated
                  </div>
                </div>
              <% } %>
            </div>
          <% } %>
        </div>
      </div>
    </main>
  </div>
</div>

<script>
  // Enhanced interactivity for referral links
  document.addEventListener('DOMContentLoaded', function() {
    const referralLinks = document.querySelectorAll('.referral-link');
    
    referralLinks.forEach(link => {
      link.addEventListener('click', async function() {
        const url = this.querySelector('div').textContent.trim();
        try {
          await navigator.clipboard.writeText(url);
          
          // Create and show notification
          const notification = document.createElement('div');
          notification.style.cssText = `
            position: fixed;
            bottom: 20px;
            right: 20px;
            background: #007AFF;
            color: white;
            padding: 12px 24px;
            border-radius: 8px;
            animation: slideIn 0.3s ease-out;
            z-index: 1000;
          `;
          notification.textContent = 'Link copied to clipboard!';
          document.body.appendChild(notification);

          // Remove notification after 2 seconds
          setTimeout(() => {
            notification.style.animation = 'slideOut 0.3s ease-in';
            setTimeout(() => notification.remove(), 300);
          }, 2000);
        } catch (err) {
          console.error('Failed to copy text: ', err);
        }
      });
    });
  });

  // Add animation styles
  const style = document.createElement('style');
  style.textContent = `
    @keyframes slideIn {
      from { transform: translateX(100%); opacity: 0; }
      to { transform: translateX(0); opacity: 1; }
    }
    @keyframes slideOut {
      from { transform: translateX(0); opacity: 1; }
      to { transform: translateX(100%); opacity: 0; }
    }
  `;
  document.head.appendChild(style);
</script>


</body>
<script src="/js/navToggle.js"></script>

</html>